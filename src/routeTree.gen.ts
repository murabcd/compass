/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as MarketingRouteImport } from './routes/_marketing'
import { Route as AppRouteImport } from './routes/_app'
import { Route as MarketingIndexRouteImport } from './routes/_marketing/index'
import { Route as IntroAssistantIdRouteImport } from './routes/intro/$assistantId'
import { Route as InterviewAssistantIdRouteImport } from './routes/interview/$assistantId'
import { Route as MarketingPricingRouteImport } from './routes/_marketing/pricing'
import { Route as MarketingAboutRouteImport } from './routes/_marketing/about'
import { Route as AppTalentIndexRouteImport } from './routes/_app/talent/index'
import { Route as AppJobsIndexRouteImport } from './routes/_app/jobs/index'
import { Route as AppAssistantsIndexRouteImport } from './routes/_app/assistants/index'
import { Route as MarketingSolutionsTalentRouteImport } from './routes/_marketing/solutions/talent'
import { Route as MarketingSolutionsJobsRouteImport } from './routes/_marketing/solutions/jobs'
import { Route as MarketingSolutionsAssistantsRouteImport } from './routes/_marketing/solutions/assistants'
import { Route as AppTalentTalentIdRouteImport } from './routes/_app/talent/$talentId'
import { Route as AppJobsJobIdRouteImport } from './routes/_app/jobs/$jobId'
import { Route as AppAssistantsAssistantIdRouteImport } from './routes/_app/assistants/$assistantId'
import { ServerRoute as ApiSessionServerRouteImport } from './routes/api/session'

const rootServerRouteImport = createServerRootRoute()

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketingRoute = MarketingRouteImport.update({
  id: '/_marketing',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketingIndexRoute = MarketingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketingRoute,
} as any)
const IntroAssistantIdRoute = IntroAssistantIdRouteImport.update({
  id: '/intro/$assistantId',
  path: '/intro/$assistantId',
  getParentRoute: () => rootRouteImport,
} as any)
const InterviewAssistantIdRoute = InterviewAssistantIdRouteImport.update({
  id: '/interview/$assistantId',
  path: '/interview/$assistantId',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketingPricingRoute = MarketingPricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => MarketingRoute,
} as any)
const MarketingAboutRoute = MarketingAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => MarketingRoute,
} as any)
const AppTalentIndexRoute = AppTalentIndexRouteImport.update({
  id: '/talent/',
  path: '/talent/',
  getParentRoute: () => AppRoute,
} as any)
const AppJobsIndexRoute = AppJobsIndexRouteImport.update({
  id: '/jobs/',
  path: '/jobs/',
  getParentRoute: () => AppRoute,
} as any)
const AppAssistantsIndexRoute = AppAssistantsIndexRouteImport.update({
  id: '/assistants/',
  path: '/assistants/',
  getParentRoute: () => AppRoute,
} as any)
const MarketingSolutionsTalentRoute =
  MarketingSolutionsTalentRouteImport.update({
    id: '/solutions/talent',
    path: '/solutions/talent',
    getParentRoute: () => MarketingRoute,
  } as any)
const MarketingSolutionsJobsRoute = MarketingSolutionsJobsRouteImport.update({
  id: '/solutions/jobs',
  path: '/solutions/jobs',
  getParentRoute: () => MarketingRoute,
} as any)
const MarketingSolutionsAssistantsRoute =
  MarketingSolutionsAssistantsRouteImport.update({
    id: '/solutions/assistants',
    path: '/solutions/assistants',
    getParentRoute: () => MarketingRoute,
  } as any)
const AppTalentTalentIdRoute = AppTalentTalentIdRouteImport.update({
  id: '/talent/$talentId',
  path: '/talent/$talentId',
  getParentRoute: () => AppRoute,
} as any)
const AppJobsJobIdRoute = AppJobsJobIdRouteImport.update({
  id: '/jobs/$jobId',
  path: '/jobs/$jobId',
  getParentRoute: () => AppRoute,
} as any)
const AppAssistantsAssistantIdRoute =
  AppAssistantsAssistantIdRouteImport.update({
    id: '/assistants/$assistantId',
    path: '/assistants/$assistantId',
    getParentRoute: () => AppRoute,
  } as any)
const ApiSessionServerRoute = ApiSessionServerRouteImport.update({
  id: '/api/session',
  path: '/api/session',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof MarketingAboutRoute
  '/pricing': typeof MarketingPricingRoute
  '/interview/$assistantId': typeof InterviewAssistantIdRoute
  '/intro/$assistantId': typeof IntroAssistantIdRoute
  '/': typeof MarketingIndexRoute
  '/assistants/$assistantId': typeof AppAssistantsAssistantIdRoute
  '/jobs/$jobId': typeof AppJobsJobIdRoute
  '/talent/$talentId': typeof AppTalentTalentIdRoute
  '/solutions/assistants': typeof MarketingSolutionsAssistantsRoute
  '/solutions/jobs': typeof MarketingSolutionsJobsRoute
  '/solutions/talent': typeof MarketingSolutionsTalentRoute
  '/assistants': typeof AppAssistantsIndexRoute
  '/jobs': typeof AppJobsIndexRoute
  '/talent': typeof AppTalentIndexRoute
}
export interface FileRoutesByTo {
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof MarketingAboutRoute
  '/pricing': typeof MarketingPricingRoute
  '/interview/$assistantId': typeof InterviewAssistantIdRoute
  '/intro/$assistantId': typeof IntroAssistantIdRoute
  '/': typeof MarketingIndexRoute
  '/assistants/$assistantId': typeof AppAssistantsAssistantIdRoute
  '/jobs/$jobId': typeof AppJobsJobIdRoute
  '/talent/$talentId': typeof AppTalentTalentIdRoute
  '/solutions/assistants': typeof MarketingSolutionsAssistantsRoute
  '/solutions/jobs': typeof MarketingSolutionsJobsRoute
  '/solutions/talent': typeof MarketingSolutionsTalentRoute
  '/assistants': typeof AppAssistantsIndexRoute
  '/jobs': typeof AppJobsIndexRoute
  '/talent': typeof AppTalentIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/_marketing': typeof MarketingRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_marketing/about': typeof MarketingAboutRoute
  '/_marketing/pricing': typeof MarketingPricingRoute
  '/interview/$assistantId': typeof InterviewAssistantIdRoute
  '/intro/$assistantId': typeof IntroAssistantIdRoute
  '/_marketing/': typeof MarketingIndexRoute
  '/_app/assistants/$assistantId': typeof AppAssistantsAssistantIdRoute
  '/_app/jobs/$jobId': typeof AppJobsJobIdRoute
  '/_app/talent/$talentId': typeof AppTalentTalentIdRoute
  '/_marketing/solutions/assistants': typeof MarketingSolutionsAssistantsRoute
  '/_marketing/solutions/jobs': typeof MarketingSolutionsJobsRoute
  '/_marketing/solutions/talent': typeof MarketingSolutionsTalentRoute
  '/_app/assistants/': typeof AppAssistantsIndexRoute
  '/_app/jobs/': typeof AppJobsIndexRoute
  '/_app/talent/': typeof AppTalentIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/about'
    | '/pricing'
    | '/interview/$assistantId'
    | '/intro/$assistantId'
    | '/'
    | '/assistants/$assistantId'
    | '/jobs/$jobId'
    | '/talent/$talentId'
    | '/solutions/assistants'
    | '/solutions/jobs'
    | '/solutions/talent'
    | '/assistants'
    | '/jobs'
    | '/talent'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/about'
    | '/pricing'
    | '/interview/$assistantId'
    | '/intro/$assistantId'
    | '/'
    | '/assistants/$assistantId'
    | '/jobs/$jobId'
    | '/talent/$talentId'
    | '/solutions/assistants'
    | '/solutions/jobs'
    | '/solutions/talent'
    | '/assistants'
    | '/jobs'
    | '/talent'
  id:
    | '__root__'
    | '/_app'
    | '/_marketing'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/_marketing/about'
    | '/_marketing/pricing'
    | '/interview/$assistantId'
    | '/intro/$assistantId'
    | '/_marketing/'
    | '/_app/assistants/$assistantId'
    | '/_app/jobs/$jobId'
    | '/_app/talent/$talentId'
    | '/_marketing/solutions/assistants'
    | '/_marketing/solutions/jobs'
    | '/_marketing/solutions/talent'
    | '/_app/assistants/'
    | '/_app/jobs/'
    | '/_app/talent/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  MarketingRoute: typeof MarketingRouteWithChildren
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  InterviewAssistantIdRoute: typeof InterviewAssistantIdRoute
  IntroAssistantIdRoute: typeof IntroAssistantIdRoute
}
export interface FileServerRoutesByFullPath {
  '/api/session': typeof ApiSessionServerRoute
}
export interface FileServerRoutesByTo {
  '/api/session': typeof ApiSessionServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/session': typeof ApiSessionServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/session'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/session'
  id: '__root__' | '/api/session'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiSessionServerRoute: typeof ApiSessionServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_marketing': {
      id: '/_marketing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MarketingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_marketing/': {
      id: '/_marketing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MarketingIndexRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/intro/$assistantId': {
      id: '/intro/$assistantId'
      path: '/intro/$assistantId'
      fullPath: '/intro/$assistantId'
      preLoaderRoute: typeof IntroAssistantIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/interview/$assistantId': {
      id: '/interview/$assistantId'
      path: '/interview/$assistantId'
      fullPath: '/interview/$assistantId'
      preLoaderRoute: typeof InterviewAssistantIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_marketing/pricing': {
      id: '/_marketing/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof MarketingPricingRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/_marketing/about': {
      id: '/_marketing/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof MarketingAboutRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/_app/talent/': {
      id: '/_app/talent/'
      path: '/talent'
      fullPath: '/talent'
      preLoaderRoute: typeof AppTalentIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/jobs/': {
      id: '/_app/jobs/'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof AppJobsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/assistants/': {
      id: '/_app/assistants/'
      path: '/assistants'
      fullPath: '/assistants'
      preLoaderRoute: typeof AppAssistantsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_marketing/solutions/talent': {
      id: '/_marketing/solutions/talent'
      path: '/solutions/talent'
      fullPath: '/solutions/talent'
      preLoaderRoute: typeof MarketingSolutionsTalentRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/_marketing/solutions/jobs': {
      id: '/_marketing/solutions/jobs'
      path: '/solutions/jobs'
      fullPath: '/solutions/jobs'
      preLoaderRoute: typeof MarketingSolutionsJobsRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/_marketing/solutions/assistants': {
      id: '/_marketing/solutions/assistants'
      path: '/solutions/assistants'
      fullPath: '/solutions/assistants'
      preLoaderRoute: typeof MarketingSolutionsAssistantsRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/_app/talent/$talentId': {
      id: '/_app/talent/$talentId'
      path: '/talent/$talentId'
      fullPath: '/talent/$talentId'
      preLoaderRoute: typeof AppTalentTalentIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/jobs/$jobId': {
      id: '/_app/jobs/$jobId'
      path: '/jobs/$jobId'
      fullPath: '/jobs/$jobId'
      preLoaderRoute: typeof AppJobsJobIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/assistants/$assistantId': {
      id: '/_app/assistants/$assistantId'
      path: '/assistants/$assistantId'
      fullPath: '/assistants/$assistantId'
      preLoaderRoute: typeof AppAssistantsAssistantIdRouteImport
      parentRoute: typeof AppRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/session': {
      id: '/api/session'
      path: '/api/session'
      fullPath: '/api/session'
      preLoaderRoute: typeof ApiSessionServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AppRouteChildren {
  AppAssistantsAssistantIdRoute: typeof AppAssistantsAssistantIdRoute
  AppJobsJobIdRoute: typeof AppJobsJobIdRoute
  AppTalentTalentIdRoute: typeof AppTalentTalentIdRoute
  AppAssistantsIndexRoute: typeof AppAssistantsIndexRoute
  AppJobsIndexRoute: typeof AppJobsIndexRoute
  AppTalentIndexRoute: typeof AppTalentIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppAssistantsAssistantIdRoute: AppAssistantsAssistantIdRoute,
  AppJobsJobIdRoute: AppJobsJobIdRoute,
  AppTalentTalentIdRoute: AppTalentTalentIdRoute,
  AppAssistantsIndexRoute: AppAssistantsIndexRoute,
  AppJobsIndexRoute: AppJobsIndexRoute,
  AppTalentIndexRoute: AppTalentIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface MarketingRouteChildren {
  MarketingAboutRoute: typeof MarketingAboutRoute
  MarketingPricingRoute: typeof MarketingPricingRoute
  MarketingIndexRoute: typeof MarketingIndexRoute
  MarketingSolutionsAssistantsRoute: typeof MarketingSolutionsAssistantsRoute
  MarketingSolutionsJobsRoute: typeof MarketingSolutionsJobsRoute
  MarketingSolutionsTalentRoute: typeof MarketingSolutionsTalentRoute
}

const MarketingRouteChildren: MarketingRouteChildren = {
  MarketingAboutRoute: MarketingAboutRoute,
  MarketingPricingRoute: MarketingPricingRoute,
  MarketingIndexRoute: MarketingIndexRoute,
  MarketingSolutionsAssistantsRoute: MarketingSolutionsAssistantsRoute,
  MarketingSolutionsJobsRoute: MarketingSolutionsJobsRoute,
  MarketingSolutionsTalentRoute: MarketingSolutionsTalentRoute,
}

const MarketingRouteWithChildren = MarketingRoute._addFileChildren(
  MarketingRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  MarketingRoute: MarketingRouteWithChildren,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  InterviewAssistantIdRoute: InterviewAssistantIdRoute,
  IntroAssistantIdRoute: IntroAssistantIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiSessionServerRoute: ApiSessionServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
